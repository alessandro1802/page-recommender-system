there advanced template coding technique improve display editing template wikipedia there also tactic debugging template parameter mediawiki markup language possibility better use lua module many bug associated difficulty dealing awkward feature markup language lead coding error unbalanced metacharacters major source error for example coding instead cause act thereby invoking there difference wiki-formatting content parameter inside if-expressions outside template need substituted need special handling providing parameter default parameter alias covered well inside single template nesting limit nested expression multiple if-then-else-if ... nested keyword error message might appear exceeded nesting limit however nested beyond level template contain hundred if-expressions switch-branches nested inside others some template contained complex conditional calculation nested level deep year also template contained hundred if-expressions year not nested one giant if-then-else-else-else-else-else .... issue complicates template processing parameter wiki-formatting parameter content inside if-logic ifeq switch lcfirst ucfirst may update mediawiki markup parser still wiki-formatting content parameter inside if-expressions outside this mean parameter containing space lead semicolon colon pound sign change value inside if-clauses surprise example parameter outside display differently inside ifeq ... the worst shock parameter contains leading semicolon trigger formatting become ye-olde bolded semicolon-header line the problem occurs whether inside ifexpr ifeq switch markup expression parameter preceded text either then/else clause wiki-formatting inside parameter occur test leading pound sign triggered auto-numbering line indented the situation leading semicolon colon might relatively rare reminder showing true content template parameter try display parameter outside start if-statement clause display text parameter inside if-logic else prepare shocking result parameter wiki-formatted display inside if-logic result etc intended formatted using instead work fine many coding error debugged easily attempting isolate code section coding error likely occurred intense proofreading logic flow often quickest fix checking typical syntax error see common coding error sometimes section troublesome code could copied short test page edit-preview tested separately however editing extra-page window seems like much effort consider merely copying code top current template similarly template could developed early stage multiple section code debugged separately eventually joined together nested section if-then-else-if review option consider the basic strategy isolate code section debugged next testing section code crucial there age-old adage heed perhaps put variety example template doc subpage help detect problem early development however complex template talk-page special subpage /testcases contain section numerous example whole lot demonstrate full scope template feature when developing section markup use template parameter try always set parameter default value especially inside expression if-logic coding particular parameter given default value across whole page value could easily changed text editor global search-and-replace string substitution change default value value testing case parameter given default value section code tested edit-preview editing template any parameter without default value become literal triple-brace text literal character non-defaulted parameter evaluated expression if-logic edit-preview template page there several common coding error cause problem processing template the following used checklist help debug problem template seems acting bizarre note common coding error could easily spotted simple syntax checker warning brace could trouble treated template size trying pas parameter end-braces again always checking first common error first step avoid time hunting complex error never really existed remember mediawiki markup language extremely error-prone many coding error occur many hideous problem truly merely syntax fix rare case template might need rewritten allow text substitution per subst result running template saved page edit-save operation case safesubst-prefix must inserted every markup function used inside template every level nested logic also every html comment must surrounded noinclude tag noinclude html comment here /noinclude otherwise triggered html comment stored inside saved page sequence executed running template note all extra noinclude safesubst noinclude/ keywords likely require template markup re-indented inside fit extra inserted text widen clutter original markup style specifically alter template allow text substitution prefix safesubst noinclude/ must inserted inside opening double-brace markup function inside template some example inserting safesubst-prefix inside template markup general every markup function start double-brace must altered insert long safesubst-prefix safesubst noinclude/ space afterward the action keyword safesubst allow conditional substitution markup whole template invoked subst mytemplate| ... essence keyword safesubst could called ifsubst meaning 'subst used invoke template substitute well remember the safesubst-prefix must inserted every markup function inside template except test logic never used actual page any markup omits safesubst fail template executed subst mode subst mytemplate| ... parameter changed would remain unchanged without safesubst-prefix exception only logic would never stored page could omit safesubst test-logic triggered special parameter value never used inside stored page any markup omits safesubst work regular transclusion fail template executed using subst-mode prefix subst for example technical explanation see substitution indenting long line all added safesubst-prefix text widen line improve readability could split indented safesubst noinclude/ prefix for example indentation style text safesubst noinclude/ begin next line avoid wrapping line prefix safesubst noinclude/ several markup function might fail work correctly unless safesubst prefix immediately attached keyword nbsp safesubst noinclude/ ifeq ... when trying perform more-complex intricate operation might instinctive fear template large needed however many large template running year wikipedia example the source-footnote formatter template citation/core display standardized citation format invoked several wrapper template pas hundred parameter core logic check parameter value conditional markup expression the special expandtemplates page take wikitext expands everything double brace recursively template parser function like ... variable like currentday