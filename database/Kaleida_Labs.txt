kaleida lab formed produce multimedia cross-platform kaleida medium player object oriented scripting language scriptx used program behavior the system aimed production interactive rom title area major effort early when system delivered relatively high system requirement memory footprint lacked native powerpc version mac platform around time rapid change market especially expansion world wide web java programming language pushed interactive market niche role the kaleida platform failed gain significant traction company closed kaleida one three joint venture apple ibm including taligent operating system aim alliance motorola powerpc platform scriptx one several similar software platform started apple timeframe the system also aimed multimedia market although evolved originally major upgrade hypercard the dylan programming language full-featured platform aimed general programming multimedia development software project ended approximately time announced company began operation summer nat goldhaber serving first ceo the company staffed hand picking member apple quicktime team along member big-iron content delivery side ibm kaleida corporate office located mountain view california site near shoreline amphitheater east side u.s. kaleida one earliest company post corporate website the early model system kaleida medium player kmp this essentially cross-platform interactive version quicktime player would run apple macintosh ibm clone well set-top box platform intended single universal multimedia system top model scriptx programming language object library allowed developer make medium file completely interactive according statement made digital world conference goldhaber stated scriptx would allow developer distribute work practically device simply hitting button screen selecting save scriptx grandiose statement typical goldhaber later stating actually genuine social importance goldhaber flamboyant style expensive company payroll lack obvious progress led negative story press one executive described company spent million one year existence apple ibm loath continue spending money rate said kaleida salary high company many employee current stage development early goldhaber board started fighting stock option whether company public july company announced goldhaber replaced ceo mike braun formerly ibm the company stated goldhaber would remain board effort build industry partnership blamed lack progress front goldhaber hand management main reason switch parting goldhaber quipped different culture political maneuverings ibm apple doomed company start following goldhaber ousting company focus narrowed plan build system set-top box officially abandoned april kaleida mission complete support scriptx language multimedia object library point late kaleida sought bundle kmp system software new personal computer time cd-rom developer could ship kmp content support existing window macintosh system part new focus company downsized layoff representing workforce late early company objective kaleida medium player run reference platform consisting either mhz motorola mhz intel processor running random access memory such system typical installed base time new computer shipping read-only cd-rom drive toshiba supported kaleida set-top box effort became minority stakeholder throughout brief history kaleida maintained cross-platform development effort window window window macintosh supporting powerpc platform the scriptx development kit version kaleida medium player finally released december considerably late nevertheless review generally positive calling remarkable ease use stating core class provide high common denominator feature set scriptx-based development however performance another issue entirely the version kmp required ram window mac basic runtime actual content ran put perspective mid-range mac era shipped ram standard used significant amount moreover system released powerpc format although point ppc already formed high end mac lineup eight month kaleida founded partly authoring environment application based cd-rom but product life cycle cd-rom heralded year content delivery system turned surprisingly short becoming clear world wide web would delivering many lightweight interactive system previously delivered cd-rom video similar high-bandwidth system yet suitable web need development environment interactivity offered something like kaleida kaleida also formed degree offer alternative wintel platform point appeared emerging market world goldhaber mentioned many occasion describing upcoming war multimedia after netscape public offering early many software developer recognized browser would pose challenge window browser would become multimedia platform right the standalone platform attack wintel existed kaleida started effort deliver object internet deliver web content most potential kaleida developer taking wait-and-watch approach system waiting kaleida solve performance problem ship stable version scriptx however company able demonstrate system ran acceptably le ram time high end market macromedia director associated lingo program took advantage vacuum establish strong market meanwhile sun microsystems promoting new java programming language web-dedicated system designed specifically run even smallest platform late clear scriptx lost momentum market even though company verge shipping scriptx version november apple computer ibm announced closure kaleida lab effective january the parent company announced would ship scriptx anyhow future development scriptx would move group inside apple computer apple offered job member scriptx engineering team scriptx version shipped almost concurrently closure kaleida lab january shipping scriptx apple ibm met contractual commitment made developer avoided legal difficulty ultimately two multimedia content project ever shipped using scriptx one cd-rom version swedish national encyclopedia nationalencyklopedin developed linné data gothenburg sweden the interactive music title robert winter crazy ragtime within month development scriptx withered away inside apple remaining employee either migrated job apple left company industry the director application remained major force multimedia market time supplanted replaced flash early version flash many way clone scriptx using small plug-in runtime event-driven language similar resource requirement the principal software architect scriptx john wainwright australian-born computer scientist scriptx implemented using extensive library called object wainwright developed joining kaleida sold company inception object used preprocessor directive simulate object system within library the library featured class many designed support multimedia well create customized user interface common data structure array linked list implemented collection class library scriptx object oriented scripting language used design element smalltalk dylan hypertalk lisp object logo c++ pascal with smalltalk shared concept class object inheritance also featured multiple inheritance class object dynamic binding object runtime scriptx primitive data type even integer defined object all object instance class class instance metaclass object lisp statement every line scriptx program expression returned value scriptx used garbage collection running separate thread handle memory featured object store permanent collection scriptx supported multi-threading multiprocessing offered scripting control lower level operating system feature event concurrently running thread early multimedia development tool lacked technique synchronizing presentation except polling operating system clock ray valdés writing dr. dobb journal noted key scriptx feature clock class provides facility synchronizing timed sequence action required multimedia apps following closure kaleida lab wainwright went serve principal architect maxscript scripting language studio max used process content gaming application maxi sims program thus scriptx considered progenitor maxscript closely resembles scriptx the following code illustrates unique syntax scriptx language part class handle mouse tracking larger program written don hopkins the sendtrackdrop method sends trackdrop message another object this code responsible forwarding trackdrop message object illustrates number uncommon feature scriptx language minor note interest assignment operator like pascal variable marked local determine scope this opposite modern language local default scope declaration would redundant conventional language scoping visibility defined location source code file variable declared inside method local method defined outside method declaration global class program this lack file-based scoping base feature scriptx language others like notably dylan conventional language like java class similar construct defined within single file least master file scope defined file system code location within contrast scriptx method defined class file example method sendtrackdrop applied tracker class placed within file accessed runtime this allows programmer organize code class functionality cost extra syntax java many similarity scriptx like scriptx object based language element syntax similar c++ java class support limited form multiple inheritance interface java runtime environment utilizes garbage collector memory management tracing architecture similar scriptx both java scriptx translate program platform-independent bytecode unlike scriptx java pure object system primitive data type contrast scriptx expression java program always written inside class definition return either value void this make java code much easier secure protect tampering malicious interference java able beginning support multi-processing well multi-threaded application thus naturally scalable these feature attribute java made suitable distributed networking environment scriptx although scriptx java designed platform independent virtual machine environment philosophy implementation quite different the kaleida medium player complex interpreter required several megabyte run kaleida never achieved effective performance system le random-access memory contrast java designed run compiled bytecode stripped virtual machine could implemented virtually larger processor way java could used anywhere handheld device consumer appliance mainframe computer java demonstrated mostly runtime environment small applet code could embedded web page downloaded run browser sun microsystems provided detailed specification java released many class open source aggressively formed alliance distribute share development company throughout computer hardware software industry