the houston automatic spooling priority program commonly known hasp extension ibm operating system successor providing extended support job management data management task management remote job entry included spooling routine called reader/interpreters output writer each reader/interpreter responsible reading one input job stream one input device likewise output writer responsible controlling one printer punch spooled data stored temporary datasets controlled standard service each reader/interpreter output writer separate operating system task partition region system large number reader printer punch might large number spooling task hasp developed ibm federal system division contractor lyndon johnson space center houston the developer tom simpson bob crabtree hasp program ran mainframe performed function scheduling control job flow spooling printing/punching hasp support ibm operating system remote job entry provided roughly equivalent facility hasp nih created shared spool capability hasp used many mainframe site allowed hasp system share common spool checkpoint this enabled workload balancing multi-mainframe environment hasp don greb dave miko mellon bank moved shared spool version carried forward multi-access spool ibm formal support hasp mv over copy hasp shared spool mod distributed around world the shared spool mellon mod added share distribution process could widely accessed the program sometimes referred various name indication ibm ever using official document the program became classified part ibm type-iii library competitor asp attached support processor ran one mainframe controlled scheduling attached mainframe asp later became mv hasp became one two job entry subsystem many year hasp label removed source message issued still prefixed hasp modified version hasp used provide batch spooling remote job entry service michigan terminal system late hasp bypassed operating system service code specially tailored efficiency hasp operated single operating system task used cooperative multitasking internally run processor perform task running card reader printer punch managing spool file communicating system operator driving multiple communication line remote job entry hasp written entirely assembler typical hasp system might require memory could virtual memory os/vs system much would become jecl part hasp hasp originally supported ibm synchronous transmit-receive str batch terminal however hasp dropped support str supported binary synchronous communication bsc protocol hasp supported ibm terminal additionally provided support multi-leaving communication intelligent workstation ibm ibm model multi-leaving fully synchronous pseudo-simultaneous bi-directional transmission variable number data stream two computer utilizing binary-synchronous communication facility third party vendor developed variety simulator multi-leaving implementation use hasp asp some vendor incorrectly referred product hasp emulator product actually terminal talked hasp perform function hasp the rje console operator could enter restricted set hasp console operator command these hasp command precursor job entry control language jecl operand restricted remote site hence would display typically still outstanding operator remote site some hasp rje console command could entered short single letter form spelled command line meant cancel rather submit current deck card read this might use card jam made sensible let job ahead one card replaced nearby keypunch hasp job log output provided summary resource used job output appeared cap