operating system system software manages computer hardware software resource provides common service computer program time-sharing operating system schedule task efficient use system may also include accounting software cost allocation processor time mass storage printing resource for hardware function input output memory allocation operating system act intermediary program computer hardware although application code usually executed directly hardware frequently make system call function interrupted operating system found many device contain computer cellular phone video game console web server supercomputer the dominant general-purpose personal computer operating system microsoft window market share around macos apple inc. second place variety linux collectively third place mobile sector including smartphones tablet android share year according third quarter data android share smartphones dominant percent growth rate percent per year followed apple io percent per year decrease market share percent operating system amount percent linux distribution dominant server supercomputing sector other specialized class operating system special-purpose operating system embedded real-time system exist many application security-focused operating system also exist some operating system low system requirement e.g light-weight linux distribution others may higher system requirement some operating system require installation may come pre-installed purchased computer oem-installation whereas others may run directly medium i.e live flash memory i.e usb stick single-tasking system run one program time multi-tasking operating system allows one program running concurrently this achieved time-sharing available processor time divided multiple process these process interrupted repeatedly time slice task-scheduling subsystem operating system multi-tasking may characterized preemptive cooperative type preemptive multitasking operating system slice cpu time dedicates slot program unix-like operating system linux—as well non-unix-like amigaos—support preemptive multitasking cooperative multitasking achieved relying process provide time process defined manner version microsoft window used cooperative multi-tasking version window used preemptive multi-tasking single-user operating system facility distinguish user may allow multiple program run tandem multi-user operating system extends basic concept multi-tasking facility identify process resource disk space belonging multiple user system permit multiple user interact system time time-sharing operating system schedule task efficient use system may also include accounting software cost allocation processor time mass storage printing resource multiple user distributed operating system manages group distinct networked computer make appear single computer computation distributed divided amongst constituent computer embedded operating system designed used embedded computer system they designed operate small machine le autonomy e.g pda they compact extremely efficient design able operate limited amount resource window minix example embedded operating system real-time operating system operating system guarantee process event data specific moment time real-time operating system may single- multi-tasking multitasking us specialized scheduling algorithm deterministic nature behavior achieved such event-driven system switch task based priority external event whereas time-sharing operating system switch task based clock interrupt library operating system one service typical operating system provides networking provided form library composed application configuration code construct unikernel specialized single address space machine image deployed cloud embedded environment explanation needed early computer built perform series single task like calculator basic operating system feature developed resident monitor function could automatically run different program succession speed processing operating system exist modern complex form early hardware feature added enabled use runtime library interrupt parallel processing when personal computer became popular operating system made similar concept used larger computer earliest electronic digital system operating system electronic system time programmed row mechanical switch jumper wire plugboard these special-purpose system example generated ballistics table military controlled printing payroll check data punched paper card after programmable general-purpose computer invented machine language consisting string binary digit punched paper tape introduced sped programming process stern full citation needed early computer could execute one program time each user sole use computer limited period would arrive scheduled time program data punched paper card punched tape the program would loaded machine machine would set work program completed crashed program could generally debugged via front panel using toggle switch panel light said alan turing master early manchester mark machine already deriving primitive conception operating system principle universal turing machine later machine came library program would linked user program assist operation input output compiling generating machine code human-readable symbolic code this genesis modern-day operating system however machine still ran single job time cambridge university england job queue one time washing line clothesline tape hung different colored clothes-pegs indicate job priority citation needed late program one would recognize operating system beginning appear often pointed earliest recognizable example gm-naa i/o released ibm the first known example actually referred share operating system development gm-naa i/o released may paper describing system george ryckman noted the development computer operating system materially aided problem getting program series program computer efficiently one famous example often found discussion early system atlas supervisor running atlas referred december article describing system context operating system along line system operates fashion the atlas team used term supervisor widely used along monitor brinch hansen described significant breakthrough history operating system through many major feature pioneered field operating system mainframe computer including batch processing input/output interrupting buffering multitasking spooling runtime library link-loading program sorting record file these feature included included application software option application programmer rather separate operating system used application during ibm introduced concept single spanning entire product line crucial success machine ibm current mainframe operating system distant descendant original system modern machine backward compatible application written citation needed also pioneered concept operating system keep track system resource used including program data space allocation main memory file space secondary storage file locking update when process terminated reason resource re-claimed operating system the alternative system started whole line ibm operating system focused concept virtual machine other operating system used ibm series mainframe included system developed ibm disk operating system time sharing system tape operating system basic operating system acp airline control program well non-ibm system mt michigan terminal system music multi-user system interactive computing orvyl stanford timesharing system control data corporation developed scope operating system batch processing cooperation university minnesota kronos later no operating system developed supported simultaneous batch timesharing use like many commercial timesharing system interface extension dartmouth basic operating system one pioneering effort timesharing programming language late control data university illinois developed plato operating system used plasma panel display long-distance time sharing network plato remarkably innovative time featuring real-time chat multi-user graphical game burroughs corporation introduced mcp master control program operating system the stack machine designed exclusively support high-level language assembler indeed mcp first written exclusively high-level language espol dialect algol mcp also introduced many ground-breaking innovation first commercial implementation virtual memory during development ibm made approach burroughs license mcp run hardware this proposal declined burroughs management protect existing hardware production mcp still use today unisys company mcp/clearpath line computer univac first commercial computer manufacturer produced series exec operating system like early main-frame system batch-oriented system managed magnetic drum disk card reader line printer univac produced real-time basic rtb system support large-scale time sharing also patterned dartmouth system general electric developed general electric comprehensive operating supervisor gecos primarily supported batch processing after acquisition honeywell renamed general comprehensive operating system gcos bell lab general electric mit developed multiplexed information computing service multics introduced concept ringed security privilege level digital equipment corporation developed many operating system various computer line including time-sharing system class system before widespread use unix particularly popular system university early arpanet community single-user real-time class minicomputer corresponding multi-user from late late several hardware capability evolved allowed similar ported software run one system early system utilized microprogramming implement feature system order permit different underlying computer architecture appear others series fact except microprogrammed implementation the enormous investment software system made since caused original computer manufacturer continue develop compatible operating system along hardware notable supported mainframe operating system include the first microcomputer capacity need elaborate operating system developed mainframe mini minimalistic operating system developed often loaded rom known monitor one notable early disk operating system cp/m supported many early microcomputer closely imitated microsoft ms-dos became widely popular operating system chosen ibm ibm version called ibm do do apple computer inc. apple inc. abandoned popular apple series microcomputer introduce apple macintosh computer innovative graphical user interface gui mac the introduction intel cpu chip october architecture paging capability provided personal computer ability run multitasking operating system like earlier minicomputer mainframe microsoft responded progress hiring dave cutler developed vms operating system digital equipment corporation would lead development window operating system continues serve basis microsoft operating system line steve job co-founder apple inc. started next computer inc. developed nextstep operating system nextstep would later acquired apple inc. used along code freebsd core mac macos latest name change the gnu project started activist programmer richard stallman goal creating complete free software replacement proprietary unix operating system while project highly successful duplicating functionality various part unix development gnu hurd kernel proved unproductive finnish computer science student linus torvalds cooperation volunteer collaborating internet released first version linux kernel soon merged gnu user space component system software form complete operating system since combination two major component usually referred simply linux software industry naming convention stallman free software foundation remain opposed preferring name gnu/linux the berkeley software distribution known bsd unix derivative distributed university california berkeley starting freely distributed ported many minicomputer eventually also gained following use pc mainly freebsd netbsd openbsd unix originally written assembly language ken thompson wrote mainly based bcpl based experience multics project replaced unix rewritten developed large complex family inter-related operating system influential every modern operating system see history the unix-like family diverse group operating system several major sub-categories including system bsd linux the name unix trademark the open group license use operating system shown conform definition unix-like commonly used refer large set operating system resemble original unix unix-like system run wide variety computer architecture they used heavily server business well workstation academic engineering environment free unix variant linux bsd popular area five operating system certified the open group holder unix trademark unix hp-ux ibm aix descendant original system unix designed run respective vendor hardware contrast sun microsystems solaris run multiple type hardware including sparc server pc apple macos replacement apple earlier non-unix classic mac hybrid kernel-based bsd variant derived nextstep mach freebsd ibm z/os unix system service includes shell utility based mortice kern interopen product unix interoperability sought establishing posix standard the posix standard applied operating system although originally created various unix variant subgroup unix family berkeley software distribution family includes freebsd netbsd openbsd these operating system commonly found webservers although also function personal computer the internet owes much existence bsd many protocol commonly used computer connect send receive data network widely implemented refined bsd the world wide web also first demonstrated number computer running based bsd called nextstep university california berkeley installed first unix system over time student staff computer science department began adding new program make thing easier text editor when berkeley received new vax computer unix installed school undergraduate modified unix even order take advantage computer hardware possibility the defense advanced research project agency department defense took interest decided fund project many school corporation government organization took notice started use berkeley version unix instead official one distributed steve job upon leaving apple inc. formed next inc. company manufactured high-end computer running variation bsd called nextstep one computer used tim berners-lee first webserver create world wide web developer like keith bostic encouraged project replace non-free code originated bell lab once done however sued after two year legal dispute bsd project spawned number free derivative netbsd freebsd openbsd netbsd macos formerly mac later line open core graphical operating system developed marketed sold apple inc. latest pre-loaded currently shipping macintosh computer macos successor original classic mac apple primary operating system since unlike predecessor macos unix operating system built technology developed next second half apple purchased company early the operating system first released mac server followed march client version mac cheetah since six distinct client server edition macos released two merged lion prior merging macos server edition macos server architecturally identical desktop counterpart usually ran apple line macintosh server hardware macos server included work group management administration software tool provide simplified access key network service including mail transfer agent samba server ldap server domain name server others with mac lion server aspect mac server integrated client version product re-branded dropping mac name the server tool offered application first introduced openedition upgrade mvs/esa system product version release announced february support posix standard z/os unix system service built top mv service run independently while ibm initially introduced openedition satisfy fips requirement several z/os component require unix service e.g. tcp/ip the linux kernel originated project linus torvalds university student finland posted information project newsgroup computer student programmer received support assistance volunteer succeeded creating complete functional kernel linux unix-like developed without unix code unlike bsd variant because open license model linux kernel code available study modification resulted use wide range computing machinery supercomputer smartwatches although estimate suggest linux used desktop laptop pc widely adopted use server embedded system cell phone linux superseded unix many platform used supercomputer including top many computer also different order linux run top linux also commonly used small energy-efficient computer smartphones smartwatches the linux kernel used popular distribution red hat debian ubuntu linux mint google android chrome chromium microsoft window family proprietary operating system designed microsoft corporation primarily targeted intel architecture based computer estimated percent total usage share web connected computer the latest version window window overtook window common version use microsoft window first released operating environment running top ms-dos standard operating system shipped intel architecture personal computer time window released used ms-dos bootstrap for backwards compatibility could run real-mode ms-dos window driver window released last version family later version based window kernel current client version window run arm microprocessor addition itanium still supported older server version window server past window supported additional architecture server edition window widely used however window usage server widespread personal computer window competes linux bsd server market share reactos windows-alternative operating system developed principle window without using microsoft code there many operating system significant day longer amigaos ibm microsoft classic mac non-unix precursor apple macos beos risc morphos haiku baremetal freemint some still used niche market continue developed minority platform enthusiast community specialist application the z/os operating system ibm z/architecture mainframe computer still used developed openvms formerly dec still active development vms software inc the ibm operating system ibm ibm power system midrange computer also still used developed yet operating system used almost exclusively academia operating system education research operating system concept typical example system fulfills role minix example singularity used purely research another example oberon system designed eth zürich niklaus wirth jürg gutknecht group student former computer system institute used mainly research teaching daily work wirth group other operating system failed win significant market share introduced innovation influenced mainstream operating system least bell lab plan the component operating system exist order make different part computer work together all user software need operating system order use hardware whether simple mouse keyboard complex internet component with aid firmware device driver kernel provides basic level control computer hardware device manages memory access program ram determines program get access hardware resource set reset cpu operating state optimal operation time organizes data long-term non-volatile storage file system medium disk tape flash memory etc the operating system provides interface application program computer hardware application program interact hardware obeying rule procedure programmed operating system the operating system also set service simplify development execution application program executing application program typically involves creation process operating system kernel assigns memory space resource establishes priority process multi-tasking system load program binary code memory initiate execution application program interacts user hardware device however system application request operating system execute another application within process either subroutine separate thread e.g. link attach facility successor interrupt also known abort exception fault signal trap provides efficient way operating system react environment interrupt cause central processing unit cpu control flow change away currently running program interrupt handler also known interrupt service routine isr interrupt service routine may cause central processing unit cpu context switch the detail computer process interrupt vary architecture architecture detail interrupt service routine behave vary operating system operating system however several interrupt function common the architecture operating system must software interrupt message process event occurred this contrast hardware interrupt message central processing unit cpu event occurred software interrupt similar hardware interrupt change away currently running process similarly hardware software interrupt execute interrupt service routine software interrupt may normally occurring event expected time slice occur kernel perform context switch computer program may set timer second case much data cause algorithm take long software interrupt may error condition malformed machine instruction however common error condition division zero accessing invalid memory address user send message kernel modify behavior currently running process for example command-line environment pressing interrupt character usually control-c might terminate currently running process generate software interrupt cpu int assembly language instruction available the syntax int offset number hexadecimal format interrupt vector table generate software interrupt unix-like operating system kill pid signum system call send signal another process pid process identifier receiving process signum signal number mnemonic format sent the abrasive name kill chosen early implementation terminated process unix-like operating system signal inform process occurrence asynchronous event communicate asynchronously interrupt required one reason process need asynchronously communicate another process solves variation classic reader/writer problem the writer receives pipe shell output sent reader input stream the command-line syntax alpha bravo alpha write pipe computation ready sleep wait queue bravo moved ready queue soon read input stream the kernel generate software interrupt coordinate piping signal may classified category the category input/output i/o device slower cpu therefore would slow computer cpu wait i/o finish instead computer may implement interrupt i/o completion avoiding need polling busy waiting some computer require interrupt character word costing significant amount cpu time direct memory access dma architecture feature allow device bypass cpu access main memory directly separate architecture device may perform direct memory access main memory either directly via bus when computer user type key keyboard typically character appears immediately screen likewise user move mouse cursor immediately move across screen each keystroke mouse movement generates interrupt called interrupt-driven i/o interrupt-driven i/o occurs process cause interrupt every character word transmitted device hard disk drive solid state drive magnetic tape drive transfer data rate high enough interrupting cpu every byte word transferred cpu transfer byte word device memory would require much cpu time data instead transferred device memory independently cpu hardware channel direct memory access controller interrupt delivered data transferred computer program executes system call perform block i/o write operation system call might execute following instruction while writing take place operating system context switch process normal when device finish writing device interrupt currently running process asserting interrupt request the device also place integer onto data bus upon accepting interrupt request operating system when writing process time slice expired operating system with program counter reset interrupted process resume time slice modern computer support multiple mode operation cpu capability offer least two mode user mode supervisor mode general term supervisor mode operation allows unrestricted access machine resource including mpu instruction user mode operation set limit instruction use typically disallows direct access machine resource cpu might mode similar user mode well virtual mode order emulate older processor type processor one processor one power-on reset system begin supervisor mode once operating system kernel loaded started boundary user mode supervisor mode also known kernel mode established supervisor mode used kernel low level task need unrestricted access hardware controlling memory accessed communicating device disk drive video display device user mode contrast used almost everything else application program word processor database manager operate within user mode access machine resource turning control kernel process cause switch supervisor mode typically transfer control kernel achieved executing software interrupt instruction motorola trap instruction the software interrupt cause processor switch user mode supervisor mode begin executing code allows kernel take control user mode program usually access restricted set processor instruction generally execute instruction could potentially cause disruption system operation supervisor mode instruction execution restriction typically removed allowing kernel unrestricted access machine resource the term user mode resource generally refers one cpu register contain information running program n't allowed alter attempt alter resource generally cause switch supervisor mode operating system deal illegal operation program attempting example forcibly terminating killing program among thing multiprogramming operating system kernel must responsible managing system memory currently use program this ensures program interfere memory already use another program since program time share program must independent access memory cooperative memory management used many early operating system assumes program make voluntary use kernel memory manager exceed allocated memory this system memory management almost never seen since program often contain bug cause exceed allocated memory program fails may cause memory used one program affected overwritten malicious program virus may purposefully alter another program memory may affect operation operating system with cooperative memory management take one misbehaved program crash system memory protection enables kernel limit process access computer memory various method memory protection exist including memory segmentation paging all method require level hardware support mmu n't exist computer segmentation paging certain protected mode register specify cpu memory address allow running program access attempt access address trigger interrupt cause cpu re-enter supervisor mode placing kernel charge this called segmentation violation seg-v short since difficult assign meaningful result operation usually sign misbehaving program kernel generally resort terminating offending program report error window version level memory protection program could easily circumvent need use general protection fault would produced indicating segmentation violation occurred however system would often crash anyway the use virtual memory addressing paging segmentation mean kernel choose memory program may use given time allowing operating system use memory location multiple task program try access memory n't current range accessible memory nonetheless allocated kernel interrupted way would program exceed allocated memory see section memory management under unix kind interrupt referred page fault when kernel detects page fault generally adjusts virtual memory range program triggered granting access memory requested this give kernel discretionary power particular application memory stored even whether actually allocated yet modern operating system memory accessed le frequently temporarily stored disk medium make space available use program this called swapping area memory used multiple program memory area contains swapped exchanged demand virtual memory provides programmer user perception much larger amount ram computer really multitasking refers running multiple independent computer program computer giving appearance performing task time since computer one two thing one time generally done via time-sharing mean program us share computer time execute operating system kernel contains scheduling program determines much time process spends executing order execution control passed program control passed process kernel allows program access cpu memory later control returned kernel mechanism another program may allowed use cpu this so-called passing control kernel application called context switch early model governed allocation time program called cooperative multitasking model control passed program kernel may execute long want explicitly returning control kernel this mean malicious malfunctioning program may prevent program using cpu hang entire system enters infinite loop modern operating system extend concept application preemption device driver kernel code operating system preemptive control internal run-time well the philosophy governing preemptive multitasking ensuring program given regular time cpu this implies program must limited much time allowed spend cpu without interrupted accomplish modern operating system kernel make use timed interrupt protected mode timer set kernel trigger return supervisor mode specified time elapsed see section interrupt dual mode operation many single user operating system cooperative multitasking perfectly adequate home computer generally run small number well tested program amigaos exception preemptive multitasking first version window first version microsoft window enforced preemptive multitasking n't reach home user market window since window targeted professional access data stored disk central feature operating system computer store data disk using file structured specific way order allow faster access higher reliability make better use drive available space the specific way file stored disk called file system enables file name attribute also allows stored hierarchy directory folder arranged directory tree early operating system generally supported single type disk drive one kind file system early file system limited capacity speed kind file name directory structure could use these limitation often reflected limitation operating system designed making difficult operating system support one file system while many simpler operating system support limited range option accessing storage system operating system like unix linux support technology known virtual file system vfs operating system unix support wide array storage device regardless design file system allowing accessed common application programming interface api this make unnecessary program knowledge device accessing vfs allows operating system provide program access unlimited number device infinite variety file system installed use specific device driver file system driver connected storage device hard drive accessed device driver the device driver understands specific language drive able translate language standard language used operating system access disk drive unix language block device when kernel appropriate device driver place access content disk drive raw format may contain one file system file system driver used translate command used access specific file system standard set command operating system use talk file system program deal file system basis filename directories/folders contained within hierarchical structure they create delete open close file well gather various information including access permission size free space creation modification date various difference file system make supporting file system difficult allowed character file name case sensitivity presence various kind file attribute make implementation single interface every file system daunting task operating system tend recommend using support natively file system specifically designed example ntfs window reiserfs btrfs linux however practice third party driver usually available give support widely used file system general-purpose operating system example ntfs available linux reiserfs available window third-party software support file system highly varied among modern operating system although several common file system almost operating system include support driver operating system vary file system support disk format may installed under window file system usually limited application certain medium example cd must use iso udf window vista ntfs file system operating system installed possible install linux onto many type file system unlike operating system linux unix allow file system used regardless medium stored whether hard drive disc dvd ... usb flash drive even contained within file located another file system device driver specific type computer software developed allow interaction hardware device typically constitutes interface communicating device specific computer bus communication subsystem hardware connected providing command and/or receiving data device end requisite interface operating system software application specialized hardware-dependent computer program also operating system specific enables another program typically operating system application software package computer program running operating system kernel interact transparently hardware device usually provides requisite interrupt handling necessary necessary asynchronous time-dependent hardware interfacing need the key design goal device driver abstraction every model hardware even within class device different newer model also released manufacturer provide reliable better performance newer model often controlled differently computer operating system expected know control every device future solve problem operating system essentially dictate every type device controlled the function device driver translate operating system mandated function call device specific call theory new device controlled new manner function correctly suitable driver available this new driver ensures device appears operate usual operating system point view under version window vista version linux driver execution co-operative meaning driver entered infinite loop would freeze system more recent revision operating system incorporate kernel preemption kernel interrupt driver give task separate process receives response device driver give task currently operating system support variety networking protocol hardware application using this mean computer running dissimilar operating system participate common network sharing resource computing file printer scanner using either wired wireless connection network essentially allow computer operating system access resource remote computer support function could resource connected directly local computer this includes everything simple communication using networked file system even sharing another computer graphic sound hardware some network service allow resource computer accessed transparently ssh allows networked user direct access computer command line interface client/server networking allows program computer called client connect via network another computer called server server offer host various service network computer user these service usually provided port numbered access point beyond server address each port number usually associated maximum one running program responsible handling request port daemon user program turn access local hardware resource computer passing request operating system kernel many operating system support one vendor-specific open networking protocol well example sna ibm system decnet system digital equipment corporation microsoft-specific protocol smb window specific protocol specific task may also supported nfs file access protocol like esound esd easily extended network provide sound local application remote system sound hardware computer secure depends number technology working properly modern operating system provides access number resource available software running system external device like network via kernel the operating system must capable distinguishing request allowed processed others processed while system may simply distinguish privileged non-privileged system commonly form requester identity user name establish identity may process authentication often username must quoted username may password other method authentication magnetic card biometric data might used instead case especially connection network resource may accessed authentication reading file network share also covered concept requester identity authorization particular service resource accessible requester logged system tied either requester user account variously configured group user requester belongs citation needed addition allow disallow model security system high level security also offer auditing option these would allow tracking request access resource reading file internal security security already running program possible possibly harmful request must carried interrupt operating system kernel program directly access hardware resource secured citation needed external security involves request outside computer login connected console kind network connection external request often passed device driver operating system kernel passed onto application carried directly security operating system long concern highly sensitive data held computer commercial military nature the united state government department defense dod created trusted computer system evaluation criterion tcsec standard set basic requirement assessing effectiveness security this became vital importance operating system maker tcsec used evaluate classify select trusted operating system considered processing storage retrieval sensitive classified information network service include offering file sharing print service email web site file transfer protocol ftp compromised security front line security hardware device known firewall intrusion detection/prevention system operating system level number software firewall available well intrusion detection/prevention system most modern operating system include software firewall enabled default software firewall configured allow deny network traffic service application running operating system therefore one install running insecure service telnet ftp threatened security breach firewall would deny traffic trying connect service port alternative strategy sandbox strategy available system meet popek goldberg virtualization requirement operating system running user program native code instead either emulates processor provides host p-code based system java internal security especially relevant multi-user system allows user system private file user tamper read internal security also vital auditing use since program potentially bypass operating system inclusive bypassing auditing every computer operated individual requires user interface the user interface usually referred shell essential human interaction supported the user interface view directory structure request service operating system acquire data input hardware device keyboard mouse credit card reader request operating system service display prompt status message output hardware device video monitor printer the two common form user interface historically command-line interface computer command typed line-by-line graphical user interface visual environment commonly wimp present most modern computer system support graphical user interface gui often include computer system original implementation classic mac gui integrated kernel while technically graphical user interface operating system service incorporating support one operating system kernel allow gui responsive reducing number context switch required gui perform output function other operating system modular separating graphic subsystem kernel operating system unix vms many others operating system built way linux macos also built way modern release microsoft window window vista implement graphic subsystem mostly user-space however graphic drawing routine version window window server exist mostly kernel space window little distinction interface kernel many computer operating system allow user install create user interface desire the window system conjunction gnome kde plasma commonly found setup unix unix-like bsd linux solaris system number window shell replacement released microsoft window offer alternative included window shell shell separated window numerous unix-based gui existed time derived competition among various vendor unix ibm sun led much fragmentation though effort standardize cose cde failed various reason eventually eclipsed widespread adoption gnome desktop environment prior free software-based toolkits desktop environment motif prevalent toolkit/desktop combination basis upon cde developed graphical user interface evolve time for example window modified user interface almost every time new major version window released mac gui changed dramatically introduction mac real-time operating system rtos operating system intended application fixed deadline real-time computing such application include small embedded system automobile engine controller industrial robot spacecraft industrial control large-scale computing system early example large-scale real-time operating system transaction processing facility developed american airline ibm sabre airline reservation system embedded system fixed deadline use real-time operating system vxworks pikeos ecos qnx montavista linux rtlinux window real-time operating system share similar apis desktop window share none desktop window codebase symbian also rtos kernel starting version some embedded system use operating system palm bsd linux although operating system support real-time computing hobby operating system may classified one whose code directly derived existing operating system user active developer citation needed case hobby development support homebrew computing device example simple single-board computer powered microprocessor development may architecture already widespread use operating system development may come entirely new concept may commence modeling existing operating system either case hobbyist her/his developer may interact small sometimes unstructured group individual like interest example hobby operating system include syllable templeos application software generally written use specific operating system sometimes even specific hardware citation needed when porting application run another functionality required application may implemented differently name function meaning argument etc requiring application adapted changed otherwise maintained unix first operating system written assembly language making portable system different native this cost supporting operating system diversity avoided instead writing application software platform java these abstraction already borne cost adaptation specific operating system system library another approach operating system vendor adopt standard for example posix abstraction layer provide commonality reduce porting cost