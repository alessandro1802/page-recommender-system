logic negation also called logical complement operation take proposition \displaystyle another proposition \displaystyle written \displaystyle \neg \displaystyle \mathord \sim \displaystyle \overline interpreted intuitively true \displaystyle false false \displaystyle true negation thus unary logical connective may applied operation notion proposition truth value semantic value generally classical logic negation normally identified truth function take truth falsity vice versa intuitionistic logic according brouwer–heyting–kolmogorov interpretation negation proposition \displaystyle proposition whose proof refutation \displaystyle classical negation operation one logical value typically value proposition produce value true operand false value false operand true thus statement true \displaystyle \neg pronounced would false conversely \displaystyle \neg false would true the truth table \displaystyle \neg follows negation defined term logical operation for example \displaystyle \neg defined \displaystyle p\rightarrow \bot \displaystyle \rightarrow logical consequence \displaystyle \bot absolute falsehood conversely one define \displaystyle \bot \displaystyle q\land \neg proposition \displaystyle \land logical conjunction the idea contradiction false idea work classical intuitionistic logic work paraconsistent logic contradiction necessarily false classical logic also get identity \displaystyle p\rightarrow defined \displaystyle \neg p\lor \displaystyle \lor logical disjunction algebraically classical negation corresponds complementation boolean algebra intuitionistic negation pseudocomplementation heyting algebra these algebra provide semantics classical intuitionistic logic respectively the negation proposition notated different way various context discussion field application the following table document variant the notation łukasiewicz notation set theory \displaystyle \setminus also used indicate 'not set \displaystyle u\setminus set member member regardless notated symbolized negation \displaystyle \neg read case usually simply within system classical logic double negation negation negation proposition \displaystyle logically equivalent \displaystyle expressed symbolic term \displaystyle \neg \neg p\equiv intuitionistic logic proposition implies double negation conversely this mark one important difference classical intuitionistic negation algebraically classical negation called involution period two however intuitionistic logic weaker equivalence \displaystyle \neg \neg \neg p\equiv \neg hold this intuitionistic logic \displaystyle \neg shorthand \displaystyle p\rightarrow \bot also \displaystyle p\rightarrow \neg \neg composing last implication triple negation \displaystyle \neg \neg p\rightarrow \bot implies \displaystyle p\rightarrow \bot result propositional case sentence classically provable double negation intuitionistically provable this result known glivenko theorem morgan law provide way distributing negation disjunction conjunction let \displaystyle \oplus denote logical xor operation boolean algebra linear function one exists \displaystyle \dots \in \displaystyle \dots =a_ \oplus \land \oplus \dots \oplus \land \displaystyle \dots \in another way express variable always make difference truth-value operation never make difference negation linear logical operator boolean algebra self dual function function \displaystyle \dots =\neg \neg \dots \neg \displaystyle \dots \in negation self dual logical operator first-order logic two quantifier one universal quantifier \displaystyle \forall mean existential quantifier \displaystyle \exists mean exists the negation one quantifier quantifier \displaystyle \neg \forall \equiv \exists x\neg \displaystyle \neg \exists \equiv \forall x\neg for example predicate mortal domain collection human \displaystyle \forall mean person human mortal human mortal the negation \displaystyle \neg \forall \equiv \exists x\neg meaning exists person human mortal exists someone life forever there number equivalent way formulate rule negation one usual way formulate classical negation natural deduction setting take primitive rule inference negation introduction derivation \displaystyle \displaystyle \displaystyle \neg infer \displaystyle \neg rule also called reductio absurdum negation elimination \displaystyle \displaystyle \neg infer \displaystyle rule also called falso quodlibet double negation elimination \displaystyle \neg \neg infer \displaystyle one obtains rule intuitionistic negation way excluding double negation elimination negation introduction state absurdity drawn conclusion \displaystyle \displaystyle must case i.e \displaystyle false classically refutable intuitionistically etc. negation elimination state anything follows absurdity sometimes negation elimination formulated using primitive absurdity sign \displaystyle \bot case rule say \displaystyle \displaystyle \neg follows absurdity together double negation elimination one may infer originally formulated rule namely anything follows absurdity typically intuitionistic negation \displaystyle \neg \displaystyle defined \displaystyle p\rightarrow \bot then negation introduction elimination special case implication introduction conditional proof elimination modus ponens case one must also add primitive rule falso quodlibet mathematics negation used computer science construct logical statement the exclamation mark signifies logical not language c-inspired syntax c++ java javascript perl php not operator used algol basic language algol- basic-inspired syntax pascal ada eiffel some language c++ perl etc provide one operator negation language like pl/i ratfor use negation most modern language allow statement shortened allows sometimes compiler/interpreter able optimize faster program computer science also bitwise negation this take value given switch binary see bitwise operation this often used create one complement c++ two complement simplified negative sign since equivalent taking arithmetic negative value number basically creates opposite negative value equivalent mathematical complement value value added together create whole get absolute positive equivalent value given integer following would work change negative positive negative yield true demonstrate logical negation inverting condition reversing outcome produce code logically equivalent original code i.e identical result input note depending compiler used actual instruction performed computer may differ this convention occasionally surface ordinary written speech computer-related slang for example phrase voting mean voting another example phrase clue used synonym no-clue clueless kripke semantics semantic value formula set possible world negation taken mean set-theoretic complementation citation needed see also possible world semantics